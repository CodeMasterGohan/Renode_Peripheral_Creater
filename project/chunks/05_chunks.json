[
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)"
    ],
    "chunk_type": "text",
    "content": ""
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-introduction",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1 Introduction"
    ],
    "chunk_type": "text",
    "content": ""
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-1-block-diagram",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1.1 Block Diagram"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE is the interface between the system bus and on-chip peripherals as shown in Figure 5-1.\n\n<!-- image -->"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-2-overview",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1.2 Overview"
    ],
    "chunk_type": "text",
    "content": "There are two peripheral bridges, PBRIDGE\\_A and PBRIDGE\\_B, which act as interfaces between the system bus and lower bandwidth peripherals.  In this manual, PBRIDGE refers to either of these bridges, as their functionality is identical.  The only difference is the peripherals to which they connect. Accesses that fall within the address space of the PBRIDGE are decoded to provide individual module selects for peripheral devices on the slave bus interface."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-2-1-access-protections",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1.2.1 Access Protections"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE provides programmable access protections for both masters and peripherals. It allows the privilege level of a master to be overridden, forcing it to user mode privilege, and allows masters to be designated as trusted or  untrusted.  Peripherals  may require  supervisor  privilege  level  for  access,  may restrict access to a trusted master only, and may be write-protected. See Table 5-1 for a list of master/slave IDs and the peripherals associated with each master and slave. More information on access protection may be found in Section 13.3.2.9, 'Flash Bus Interface Unit Access Protection Register (FLASH\\_BIUAPR).'\n\nTable 5-1. Peripheral Bridge Master/Slave ID Table\n\n| XBAR Port               | XBS port Module    | Master ID   | Peripheral       |\n|-------------------------|--------------------|-------------|------------------|\n| Master 0                | e200z6 Core-CPU    | 0           |                  |\n| Master 0                | e200z6-Nexus       | 1           |                  |\n| Master 1                | eDMA               | 2           |                  |\n| Master 2                | EBI                | 3           |                  |\n| Master 3 (MPC5553 only) | FEC (MPC5553 only) | 4           |                  |\n| Slave 0                 | FLASH              |             |                  |\n| Slave 1                 | EBI                |             |                  |\n| Slave 3                 | L2SRAM             |             |                  |\n| Slave 6                 | PBRIDGE_A          |             | PBRIDGE_A        |\n|                         | PBRIDGE_A          |             | FMPLL            |\n|                         | PBRIDGE_A          |             | EBI Control      |\n|                         | PBRIDGE_A          |             | FLASH Control    |\n|                         | PBRIDGE_A          |             | SIU              |\n|                         | PBRIDGE_A          |             | eMIOS            |\n|                         | PBRIDGE_A          |             | eTPU reg         |\n|                         | PBRIDGE_A          |             | eTPU PRAM        |\n|                         | PBRIDGE_A          |             | eTPU PRAM Mirror |\n|                         | PBRIDGE_A          |             | eTPU SCM         |\n\nTable 5-1. Peripheral Bridge Master/Slave ID Table  (continued)\n\n| XBAR Port   | XBS port Module   | Master ID   | Peripheral           |\n|-------------|-------------------|-------------|----------------------|\n| Slave 7     | PBRIDGE_B         |             | PBRIDGE_B            |\n| Slave 7     | PBRIDGE_B         |             | XBAR                 |\n| Slave 7     | PBRIDGE_B         |             | ESCM                 |\n| Slave 7     | PBRIDGE_B         |             | eDMA Control         |\n| Slave 7     | PBRIDGE_B         |             | INTC                 |\n| Slave 7     | PBRIDGE_B         |             | FEC (MPC5553 only)   |\n| Slave 7     | PBRIDGE_B         |             | eQADC                |\n| Slave 7     | PBRIDGE_B         |             | DSPIA (MPC5554 only) |\n| Slave 7     | PBRIDGE_B         |             | DSPIB                |\n| Slave 7     | PBRIDGE_B         |             | DSPIC                |\n| Slave 7     | PBRIDGE_B         |             | DSPID                |\n| Slave 7     | PBRIDGE_B         |             | eSCIA                |\n| Slave 7     | PBRIDGE_B         |             | eSCIB                |\n| Slave 7     | PBRIDGE_B         |             | CANA                 |\n| Slave 7     | PBRIDGE_B         |             | CANB (MPC5554 only)  |\n| Slave 7     | PBRIDGE_B         |             | CANC                 |\n| Slave 7     | PBRIDGE_B         |             | BAM                  |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-3-features",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1.3 Features"
    ],
    "chunk_type": "list",
    "content": "The following list summarizes the key features of the PBRIDGE:\n\n- \u00b7 Supports the slave interface signals. This interface is only meant for slave peripherals.\n- \u00b7 Supports 32-bit slave peripherals. (Byte, halfword, and word reads and write are supported to each.)\n- \u00b7 Supports a pair of slave accesses for 64-bit instruction fetches.\n- \u00b7 Provides configurable per-module write buffering support.\n- \u00b7 Provides configurable per-module and per-master access protections."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-1-4-modes-of-operation",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.1.4 Modes of Operation"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE has only one operating mode."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-2-external-signal-description",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.2 External Signal Description"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE has no external signals."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-3-memory-map-register-definition",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.3 Memory Map/Register Definition"
    ],
    "chunk_type": "text",
    "content": "The memory maps for the 32-bit PBRIDGE registers are shown in Table 5-2 and Table 5-3."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-table-5-2-pbridge-a-memory-map",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "Table 5-2. PBRIDGE\\_A Memory Map"
    ],
    "chunk_type": "text",
    "content": "| Address                    | Register Name    | Register Description                              | Size (bits)   |\n|----------------------------|------------------|---------------------------------------------------|---------------|\n| Base (0xC3F0_0000)         | PBRIDGE_A_MPCR   | Master privilege control register                 | 32            |\n| Base + 0x004- Base + 0x01F | -                | Reserved                                          | -             |\n| Base + 0x020               | PBRIDGE_A_PACR0  | Peripheral access control register 0              | 32            |\n| Base + 0x024- Base + 0x03F | -                | Reserved                                          | -             |\n| Base + 0x040               | PBRIDGE_A_OPACR0 | Off-platform peripheral access control register 0 | 32            |\n| Base + 0x044               | PBRIDGE_A_OPACR1 | Off-platform peripheral access control register 1 | 32            |\n| Base + 0x048               | PBRIDGE_A_OPACR2 | Off-platform peripheral access control register 2 | 32            |\n| Base + 0x04C- Base + 0x053 | -                | Reserved                                          | -             |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-table-5-3-pbridge-b-memory-map",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "Table 5-3. PBRIDGE\\_B Memory Map"
    ],
    "chunk_type": "text",
    "content": "| Address                    | Register Name    | Register Description                              | Size (bits)   |\n|----------------------------|------------------|---------------------------------------------------|---------------|\n| Base (0xFFF0_0000)         | PBRIDGE_B_MPCR   | Master privilege control register                 | 32            |\n| Base + 0x004- Base + 0x01F | -                | Reserved                                          | -             |\n| Base + 0x020               | PBRIDGE_B_PACR0  | Peripheral access control register 0              | 32            |\n| Base + 0x024- Base + 0x027 | -                | Reserved                                          | -             |\n| Base + 0x028               | PBRIDGE_B_PACR2  | Peripheral access control register 2              | 32            |\n| Base + 0x02C- Base + 0x03F | -                | Reserved                                          | -             |\n| Base + 0x040               | PBRIDGE_B_OPACR0 | Off-platform peripheral access control register 0 | 32            |\n| Base + 0x044               | PBRIDGE_B_OPACR1 | Off-platform peripheral access control register 1 | 32            |\n| Base + 0x048               | PBRIDGE_B_OPACR2 | Off-platform peripheral access control register 2 | 32            |\n| Base + 0x04C               | PBRIDGE_B_OPACR3 | Off-platform peripheral access control register 3 | 32            |\n| Base + 0x050- Base + 0x053 | -                | Reserved                                          | -             |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-mpc5553-mpc5554-microcontroller-reference-manual-rev-3-1",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "MPC5553/MPC5554 Microcontroller Reference Manual, Rev. 3.1"
    ],
    "chunk_type": "text",
    "content": ""
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-3-1-register-descriptions",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.3.1 Register Descriptions"
    ],
    "chunk_type": "text",
    "content": "There are three types of registers that control each PBRIDGE. All registers are 32-bit registers and can only be accessed in supervisor mode by trusted bus masters. Additionally, these registers must only be read from or written to by a 32-bit aligned access. PBRIDGE registers are mapped into the PBRIDGE\\_A and PBRIDGE\\_B address spaces. The protection and access fields of the MPR, PACR, and OPACR registers are 4 bits in width."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-3-1-1-master-privilege-control-register-pbridge-x-mpcr",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.3.1.1 Master Privilege Control Register (PBRIDGE\\_ x \\_MPCR)"
    ],
    "chunk_type": "register_diagram",
    "content": "Each master privilege control register (PBRIDGE\\_ x \\_MPCR) specifies 4-bit access fields defining the access privilege level associated with a bus master in the platform, as well as specifying whether write accesses from this master are bufferable. The registers provide one field per bus master. Note that access field 4 is available only in the MPC5553.\n\nFigure 5-2. Master Privilege Control Registers (PBRIDGE\\_ x \\_MPCR)\n\n<!-- image -->\n\n1 Available only in the MPC5553\n\nTable 5-4. PBRIDGE\\_ x \\_MPCR Field Descriptions\n\n|   Bits | Name   | Description                                                                                                                                                                                                                                         |\n|--------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|      0 | MBW0   | Master buffer writes. Determines whether the PBRIDGE is enabled to buffer writes from the CPU. Writes not able to be buffered by default. 0 Write accesses from the CPU are not bufferable 1 Write accesses from the CPU are allowed to be buffered |\n|      1 | MTR0   | Master trusted for reads. Determines whether the CPU is trusted for read accesses. Trusted by default. 0 The CPU is not trusted for read accesses. 1 The CPU is trusted for read accesses.                                                          |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-mpc5553-mpc5554-microcontroller-reference-manual-rev-3-1",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "MPC5553/MPC5554 Microcontroller Reference Manual, Rev. 3.1"
    ],
    "chunk_type": "text",
    "content": ""
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-table-5-4-pbridge-x-mpcr-field-descriptions-continued",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "Table 5-4. PBRIDGE\\_ x \\_MPCR Field Descriptions (continued)"
    ],
    "chunk_type": "text",
    "content": "|   Bits | Name   | Description                                                                                                                                                                                                                                               |\n|--------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|      2 | MTW0   | Master trusted for writes. Determines whether the master is trusted for write accesses. Trusted by default. 0 The CPU is not trusted for write accesses. 1 The CPU is trusted for write accesses.                                                         |\n|      3 | MPL0   | Master privilege level. Determines how the privilege level of the CPU is determined. Accesses not forced to user mode by default. 0 Accesses from the CPU are forced to user mode. 1 Accesses from the CPU are not forced to user mode.                   |\n|      4 | MBW1   | Master buffer writes. Determines whether the PBRIDGE is enabled to buffer writes from the Nexus. Writes not able to be buffered by default. 0 Write accesses from the Nexus are not bufferable 1 Write accesses from the Nexus are allowed to be buffered |\n|      5 | MTR1   | Master trusted for reads. Determines whether the Nexus is trusted for read accesses. Trusted by default. 0 The Nexus is not trusted for read accesses. 1 The Nexus is trusted for read accesses.                                                          |\n|      6 | MTW1   | Master trusted for writes. Determines whether the master is trusted for write accesses. Trusted by default. 0 The Nexus is not trusted for write accesses. 1 The Nexus is trusted for write accesses.                                                     |\n|      7 | MPL1   | Master privilege level. Determines how the privilege level of the Nexus is determined. Accesses not forced to user mode by default. 0 Accesses from the Nexus are forced to user mode. 1 Accesses from the Nexus are not forced to user mode.             |\n|      8 | MBW2   | Master buffer writes. Determines whether the PBRIDGE is enabled to buffer writes from the eDMA. Writes not able to be buffered by default. 0 Write accesses from the eDMA are not bufferable 1 Write accesses from the eDMA are allowed to be buffered    |\n|      9 | MTR2   | Master trusted for reads. Determines whether the eDMA is trusted for read accesses. Trusted by default. 0 The eDMA is not trusted for read accesses. 1 The eDMA is trusted for read accesses.                                                             |\n|     10 | MTW2   | Master trusted for writes. Determines whether the master is trusted for write accesses. Trusted by default. 0 The eDMA is not trusted for write accesses. 1 The eDMA is trusted for write accesses.                                                       |\n|     11 | MPL2   | Master privilege level. Determines how the privilege level of the eDMA is determined. Accesses not forced to user mode by default. 0 Accesses from the eDMA are forced to user mode. 1 Accesses from the eDMA are not forced to user mode.                |\n|     12 | MBW3   | Master buffer writes. Determines whether the PBRIDGE is enabled to buffer writes from the EBI. Writes not able to be buffered by default. 0 Write accesses from the EBI are not bufferable 1 Write accesses from the EBI are allowed to be buffered       |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-mpc5553-mpc5554-microcontroller-reference-manual-rev-3-1",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "MPC5553/MPC5554 Microcontroller Reference Manual, Rev. 3.1"
    ],
    "chunk_type": "text",
    "content": "Table 5-4. PBRIDGE\\_ x \\_MPCR Field Descriptions (continued)\n\n| Bits   | Name   | Description                                                                                                                                                                                                                                                                                             |\n|--------|--------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 13     | MTR3   | Master trusted for reads. Determines whether the EBI is trusted for read accesses. Trusted by default. 0 The EBI is not trusted for read accesses. 1 The EBI is trusted for read accesses.                                                                                                              |\n| 14     | MTW3   | Master trusted for writes. Determines whether the master is trusted for write accesses. Trusted by default. 0 The EBI is not trusted for write accesses. 1 The EBI is trusted for write accesses.                                                                                                       |\n| 15     | MPL3   | Master privilege level. Determines how the privilege level of the EBI is determined. Accesses not forced to user mode by default. 0 Accesses from the EBI are forced to user mode. 1 Accesses from the EBI are not forced to user mode.                                                                 |\n| 16     | MBW4 1 | Master buffer writes. Determines whether the PBRIDGE is enabled to buffer writes from the FEC. Writes not able to be buffered by default. 0 Write accesses from the FEC are not bufferable 1 Write accesses from the FEC are allowed to be buffered Note: Applies only to MPC5553. Reserved in MPC5554. |\n| 17     | MTR4 1 | Master trusted for reads. Determines whether the FEC is trusted for read accesses. Trusted by default. 0 The FEC is not trusted for read accesses. 1 The FEC is trusted for read accesses. Note: Applies only to MPC5553. Reserved in MPC5554.                                                          |\n| 18     | MTW4 1 | Master trusted for writes. Determines whether the master is trusted for write accesses. Trusted by default. 0 The FEC is not trusted for write accesses. 1 The FEC is trusted for write accesses. Note: Applies only to MPC5553. Reserved in MPC5554.                                                   |\n| 19     | MPL4 1 | Master privilege level. Determines how the privilege level of the FEC is determined. Accesses not forced to user mode by default. 0 Accesses from the FEC are forced to user mode. 1 Accesses from the FEC are not forced to user mode. Note: Applies only to MPC5553. Reserved in MPC5554.             |\n| 20-31  | -      | Reserved.                                                                                                                                                                                                                                                                                               |\n\n1 Applies only to MPC5553.  Reserved in MPC5554."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-3-1-2-peripheral-access-control-registers-pbridge-x-pacr-and-off-platform-peripheral-access-control-registers-pbridge-x-opacr",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.3.1.2 Peripheral Access Control Registers (PBRIDGE\\_ x \\_PACR) and Off-Platform Peripheral Access Control Registers (PBRIDGE\\_ x \\_OPACR)"
    ],
    "chunk_type": "register_diagram",
    "content": "Each of the PBRIDGE on-platform peripherals has a 4-bit access field in a peripheral access control register (PACR) that defines the access levels supported by the given module. A single PACR contains up to  eight  of  these  module-access  fields,  and  the  PACR  register  structure  is  shown    in  Table 5-2  and Table 5-3. The PACR registers with their access fields are shown in Figure 5-3.  There are three PACR registers, one for bridge A and two for bridge B.\n\nAlso, each of the off-platform peripherals has a 4-bit access field in an off-platform peripheral access control register (PBRIDGE\\_ \\_OPACR) that defines the access levels supported by the  given module. x Each OPACR contains up to eight of these module-access fields, and the OPACR  register structure is\n\nshown in Table 5-2 and Table 5-3.  The OPACR registers with their access fields are shown in Figure 5-4. Seven OPACR registers are used, three for bridge A, and four for bridge B."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-note",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "NOTE"
    ],
    "chunk_type": "register_diagram",
    "content": "Not all  members of the MPC5500 family have PBRIDGE\\_x\\_PACR and PBRIDGE\\_x\\_OPACR. On the parts that do not have them, writes to their addresses will receive a transfer error. If ensuring code compatibility across all  family  members  is  wanted,  then  writes  to  those  addresses  must  be qualified with SIU\\_MIDR[PARTNUM].\n\nThe type of peripheral designated by each PACR and OPACR access field is shown in Table 5-6.\n\nFigure 5-3. Peripheral Access Control Registers (PBRIDGE\\_ x \\_PACR ) n\n\n<!-- image -->\n\n|               | 0 1 2 3                                                                          | 0 1 2 3                                                                          | 0 1 2 3                                                                          | 0 1 2 3                                                                          | 0 1 2 3                                                                          | 5 6 7                                                                            | 5 6 7                                                                            | 5 6 7                                                                            | 5 6 7                                                                            | 9 10 11                                                                          | 9 10 11                                                                          | 9 10 11                                                                          | 9 10 11                                                                          | 9 10 11                                                                          | 13 14 15                                                                         | 13 14 15                                                                         |\n|---------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\n|               |                                                                                  |                                                                                  |                                                                                  |                                                                                  |                                                                                  | Access Field 1                                                                   | Access Field 1                                                                   | Access Field 1                                                                   | Access Field 1                                                                   | Access Field 2                                                                   | Access Field 2                                                                   | Access Field 2                                                                   | Access Field 2                                                                   | Access Field 3                                                                   | Access Field 3                                                                   | Access Field 3                                                                   |\n| R             | BW0 1                                                                            | SP0                                                                              | WP0                                                                              | TP0                                                                              | BW1                                                                              | SP1                                                                              | WP1                                                                              | TP1                                                                              | BW2                                                                              |                                                                                  | SP2                                                                              | WP2                                                                              | TP2                                                                              | BW3                                                                              | SP3 WP3                                                                          | TP3                                                                              |\n| Reset A_PACR0 | 0                                                                                | 1 2                                                                              | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                |\n| Reset B_PACR0 | 0                                                                                | 1 2                                                                              | 0                                                                                | 1 2                                                                              | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                |\n| Reset B_PACR2 | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                | 0                                                                                | 1 2                                                                              | 0                                                                                | 0                                                                                |\n| Reg Addr      | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) |\n|               | 16                                                                               | 17                                                                               | 18                                                                               | 19                                                                               | 20                                                                               | 21                                                                               | 22                                                                               | 23                                                                               | 24                                                                               | 25                                                                               | 26                                                                               | 27                                                                               | 28                                                                               | 29                                                                               | 30                                                                               | 31                                                                               |\n|               | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 4 Access Field 5 Access Field 6                                     | Access Field 7                                                                   | Access Field 7                                                                   | Access Field 7                                                                   |\n| R             | BW4                                                                              | SP4                                                                              | WP4                                                                              | TP4                                                                              | BW5                                                                              | SP5                                                                              | WP5                                                                              | TP5                                                                              | BW6                                                                              | SP6                                                                              | WP6                                                                              | TP6                                                                              | BW7                                                                              | SP7                                                                              | WP7                                                                              | TP7                                                                              |\n| Reset A_PACR0 | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                |\n| Reset B_PACR0 | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                |\n| Reset B_PACR2 | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                | 0                                                                                |\n| Reg Addr      | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) | Base + 0x20 (PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0); Base + 0x28 (PBRIDGE_B_PACR2) |\n\n- 1 In PBRIDGE\\_A\\_PACR0 and in PBRIDGE\\_B\\_PACR0, the BW0 bit is not writeable.\n\n2 The default value is 0b0000 for  PACR peripheral access fields that are unused or not connected.\n\nFigure 5-4. Off-platform Peripheral Access Control Registers (PBRIDGE\\_ x \\_OPACR ) n\n\n<!-- image -->\n\nTable 5-5. PBRIDGE\\_ x \\_PACR  and PBRIDGE\\_ \\_OPACR n x n Field Descriptions\n\n| Bits                        | Name   | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n|-----------------------------|--------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 0, 4, 8, 12, 16, 20, 24, 28 | BW n 1 | Buffer writes. Determines whether write accesses to this peripheral are allowed to be buffered. Write accesses not bufferable by default 0 Write accesses to this peripheral are not bufferable by the PBRIDGE. 1 Write accesses to this peripheral are allowed to be buffered by the PBRIDGE. Note: In PBRIDGE_A_PACR0 and PBRIDGE_B_PACR0, the BW0 bit is not writeable.                                                                                                             |\n| 1, 5, 9, 13, 17, 21, 25, 29 | SP n   | Supervisor protect. Determines whether the peripheral requires supervisor privilege level for access. Supervisor privilege level required by default. 0 This peripheral does not require supervisor privilege level for accesses. 1 This peripheral requires supervisor privilege level for accesses. The PBRIDGE_x_MPCR[MPLy] control bit for the master must be set. If not, the access is terminated with an error response and no peripheral access is initiated on the slave bus. |\n\nTable 5-5. PBRIDGE\\_ x \\_PACR  and PBRIDGE\\_ \\_OPACR n x n Field Descriptions  (continued)\n\n| Bits                         | Name   | Description                                                                                                                                                                                                                                                                                                                                                  |\n|------------------------------|--------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 2, 6, 10, 14, 18, 22, 26, 30 | WP n   | Write protect. Determines whether the peripheral allows write accesses. Write accesses allowed by default. 0 This peripheral allows write accesses. 1 This peripheral is write protected. If a write access is attempted, the access is terminated with an error response and no peripheral access is initiated on the slave bus.                            |\n| 3, 7, 11, 15, 19, 23, 27, 31 | TP n   | Trusted protect. Determines whether the peripheral allows accesses from an untrusted master. 0 Accesses from an untrusted master are allowed. 1 Accesses from an untrusted master are not allowed. If an access is attempted by an untrusted master, the access is terminated with an error response and no peripheral access is initiated on the slave bus. |\n\n1 In PBRIDGE\\_A\\_PACR0 and PBRIDGE\\_B\\_PACR0, the BW0 bit is not writeable.\n\nPresence or absence of a module's 4-bit access field in either a PBRIDGE\\_x\\_PACR  or PBRIDGE\\_x\\_OPACR is based on whether the  associated  peripheral  is  present  on  the  device.  When absent, the corresponding field is not implemented and will read as 0's.  Writes will be ignored."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-note",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "NOTE"
    ],
    "chunk_type": "text",
    "content": "Table 5-6 lists all of the access fields in the PACRs and OPACRs in both PBRIDGE\\_A and  PBRIDGE\\_B,  and  each  of  the  associated  peripherals present on the MPC5553/MPC5554.\n\nTable 5-6. PACR/OPACR Access Control Registers and Peripheral Mapping\n\n| Register         | Register Address       | Peripheral Access Field #   | Peripheral Type   | Access Field Default Value   |\n|------------------|------------------------|-----------------------------|-------------------|------------------------------|\n| PBRIDGE_A        | PBRIDGE_A              | PBRIDGE_A                   | PBRIDGE_A         | PBRIDGE_A                    |\n| PBRIDGE_A_PACR0  | PBRIDGE_A_Base + 0x020 | 0                           | PBRIDGE_A         | 0b0101                       |\n| PBRIDGE_A_PACR0  | PBRIDGE_A_Base + 0x020 | 1-7                         | -                 | 0b0000                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 0                           | FMPLL             | 0b0100                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 1                           | EBI Control       | 0b0100                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 2                           | Flash Control     | 0b0100                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 3                           | -                 | 0b0100                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 4                           | SIU               | 0b0100                       |\n| PBRIDGE_A_OPACR0 | PBRIDGE_A_Base + 0x040 | 5-7                         | -                 | 0b0100                       |\n| PBRIDGE_A_OPACR1 | PBRIDGE_A_Base + 0x044 | 0                           | eMIOS             | 0b0100                       |\n| PBRIDGE_A_OPACR1 | PBRIDGE_A_Base + 0x044 | 1-7                         | -                 | 0b0100                       |"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-table-5-6-pacr-opacr-access-control-registers-and-peripheral-mapping-continued",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "Table 5-6. PACR/OPACR Access Control Registers and Peripheral Mapping (continued)"
    ],
    "chunk_type": "list",
    "content": "| Register         | Register Address       | Peripheral Access Field #   | Peripheral Type   | Access Field Default Value   |\n|------------------|------------------------|-----------------------------|-------------------|------------------------------|\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 0                           | eTPU              | 0b0100                       |\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 1                           | -                 | 0b0100                       |\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 2                           | eTPU PRAM         | 0b0100                       |\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 3                           | eTPU PRAM Mirror  | 0b0100                       |\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 4                           | eTPU SCM          | 0b0100                       |\n| PBRIDGE_A_OPACR2 | PBRIDGE_A_Base + 0x048 | 5-7                         | -                 | 0b0100                       |\n| PBRIDGE_B        | PBRIDGE_B              | PBRIDGE_B                   | PBRIDGE_B         | PBRIDGE_B                    |\n| PBRIDGE_B_PACR0  | PBRIDGE_B_Base + 0x020 | 0                           | PBRIDGE_B         | 0b0101                       |\n| PBRIDGE_B_PACR0  | PBRIDGE_B_Base + 0x020 | 1                           | XBAR              | 0b0100                       |\n| PBRIDGE_B_PACR0  | PBRIDGE_B_Base + 0x020 | 2-7                         | -                 | 0b0000                       |\n| PBRIDGE_B_PACR2  | PBRIDGE_B_Base + 0x028 | 0                           | ESCM              | 0b0100                       |\n| PBRIDGE_B_PACR2  | PBRIDGE_B_Base + 0x028 | 1                           | eDMA              | 0b0100                       |\n| PBRIDGE_B_PACR2  | PBRIDGE_B_Base + 0x028 | 2                           | INTC              | 0b0100                       |\n| PBRIDGE_B_PACR2  | PBRIDGE_B_Base + 0x028 | 3 1                         | FEC 1             | 0b0100                       |\n| PBRIDGE_B_PACR2  | PBRIDGE_B_Base + 0x028 | 4-7                         | -                 | 0b0000                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 0                           | eQADC             | 0b0100                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 1-3                         | -                 | 0b0100                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 4 2                         | DSPI_A 2          | 0b0100                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 5                           | DSPI_B            | 0b0100                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 6                           | DSPI_C            | 0b0100                       |\n| PBRIDGE_B_OPACR0 | PBRIDGE_B_Base + 0x040 | 7                           | DSPI_D            | 0b0100                       |\n| PBRIDGE_B_OPACR1 | PBRIDGE_B_Base + 0x044 | 0-3                         | -                 | 0b0100                       |\n| PBRIDGE_B_OPACR1 | PBRIDGE_B_Base + 0x044 | 4                           | eSCI_A            | 0b0100                       |\n| PBRIDGE_B_OPACR1 | PBRIDGE_B_Base + 0x044 | 5                           | eSCI_B            | 0b0100                       |\n| PBRIDGE_B_OPACR1 | PBRIDGE_B_Base + 0x044 | 6-7                         | -                 | 0b0100                       |\n| PBRIDGE_B_OPACR2 | PBRIDGE_B_Base + 0x048 | 0                           | FlexCAN_A         | 0b0100                       |\n| PBRIDGE_B_OPACR2 | PBRIDGE_B_Base + 0x048 | 1 2                         | FlexCAN_B 2       | 0b0100                       |\n| PBRIDGE_B_OPACR2 | PBRIDGE_B_Base + 0x048 | 2                           | FlexCAN_C         | 0b0100                       |\n| PBRIDGE_B_OPACR2 | PBRIDGE_B_Base + 0x048 | 3-7                         | -                 | 0b0100                       |\n| PBRIDGE_B_OPACR3 | PBRIDGE_B_Base + 0x04C | 0-6                         | -                 | 0b0100                       |\n| PBRIDGE_B_OPACR3 | PBRIDGE_B_Base + 0x04C | 7                           | BAM               | 0b0100                       |\n\n- 1 In MPC5553 only, not present in MPC5554\n- 2 In MPC5554 only, not present in MPC5553"
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-functional-description",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4 Functional Description"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE serves as an interface between a system bus and the peripheral (slave) bus. It functions as a protocol translator. Support is provided for generating a pair of 32-bit peripheral accesses when targeted by a 64-bit system bus access. No other bus-sizing access support is provided.\n\nAccesses that fall within the address space of the PBRIDGE are decoded to provide individual module selects for peripheral devices on the slave bus interface."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-1-access-support",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.1 Access Support"
    ],
    "chunk_type": "text",
    "content": "Aligned 64-bit accesses, aligned word and halfword accesses, as well as byte accesses are supported for 32-bit peripherals.  Peripheral registers must not be misaligned, although no explicit checking is performed by the PBRIDGE."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-note",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "NOTE"
    ],
    "chunk_type": "text",
    "content": "Data accesses that cross a 32-bit boundary are not supported."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-2-peripheral-write-buffering",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.2 Peripheral Write Buffering"
    ],
    "chunk_type": "text",
    "content": "The PBRIDGE provides programmable write buffering capability to allow certain write accesses to be buffered  in  the  PBRIDGE  for  later  completion,  while  terminating  the  system  bus  access  early.  This provides improved performance in systems where frequent writes to a slow peripheral are performed. Write buffering must only be enabled for masters and peripherals for which an error termination from the slave bus will either not occur, or is safe to ignore.\n\nWhen write buffering is enabled, all accesses through the PBRIDGE will still occur in-order; no bypassing of buffered writes is supported.\n\nWrite buffering is controllable on a per-master and per-peripheral basis."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-note",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "NOTE"
    ],
    "chunk_type": "text",
    "content": "Write buffering will cause the processor core to believe that the write has completed  before  it  actually  has  completed  in  the  peripheral.  If  write buffering is enabled for a peripheral, the actual write will take an additional two system clock cycles plus any additional system clock cycles that the register needs. Most registers in the MPC5500 family only will delay the write by two clock cycles, but some registers will take longer. This early termination, as seen by the processor core, can defeat the mbar or msync instruction  between  the  write  to  clear  a  flag  bit  and  the  write  to  the INTC\\_EOIR.  Refer  to  Section 10.4.3.1.2,  'End-of-Interrupt  Exception Handler.' Therefore, if write buffering is enabled for a peripheral that has a flag bit, insert instructions between the mbar or msync instruction and the write to the INTC\\_EOIR that will consume at least the number of system clock cycles that the actual write is delayed."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-2-1-read-cycles",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.2.1 Read Cycles"
    ],
    "chunk_type": "text",
    "content": "Read accesses are possible with the PBRIDGE when the requested access size is 32-bits or smaller, and is not misaligned across a 32-bit boundary. 64-bit data reads (not instruction) are not supported."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-2-2-write-cycles",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.2.2 Write Cycles"
    ],
    "chunk_type": "text",
    "content": "Write  accesses  are  possible  with  the  PBRIDGE  when  the  requested  access  size  is  32-bits  or  smaller. Misaligned writes that cross a 32-bit boundary are not supported. 64-bit data writes (not instruction) are not supported."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-2-3-buffered-write-cycles",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.2.3 Buffered Write Cycles"
    ],
    "chunk_type": "text",
    "content": "Single clock write responses to the system bus are possible with the PBRIDGE when the requested write access is bufferable. If the requested access does not violate the permissions check, and if both master and peripheral are enabled for buffering writes, the PBRIDGE will internally buffer the write cycle. The write cycle is terminated early with zero system bus wait states. The access proceeds normally on the slave interface, but error responses are ignored.\n\nAll accesses are initiated and completed in order on the slave interface, regardless of buffering. If the buffer is full, a following write cycle will stall until it can either be buffered (if bufferable) or can be initiated. If the buffer has valid entries, a following read cycle will stall until the buffer is emptied and the read cycle can be completed."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-4-3-general-operation",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.4.3 General Operation"
    ],
    "chunk_type": "text",
    "content": "Slave peripherals are modules that contain readable/writable control and status registers. The system bus master reads and writes these registers through the PBRIDGE. The PBRIDGE generates module enables, the module address, transfer attributes, byte enables, and write data as inputs to the slave peripherals. The PBRIDGE captures read data from the slave interface and drives it on the system bus.\n\nSeparate  interface  ports  are  provided  for  on-platform  and  off-platform  peripherals.  The  distinction between  on-platform  and  off-platform  is  made  to  allow  platform-based  designs  incorporating  the PBRIDGE to separate the interface ports to allow for ease of timing closure. In addition, module selects and control register  storage  for  on-platform  peripherals  are  allocated  at  synthesis  time,  allowing  only needed resources to be implemented. Off-platform module selects and control register storage do not have the same degree of configurability.\n\nThe modules that are on-platform and those that are off-platform are detailed in Table 5-7.\n\nTable 5-7. On-Platform and Off-Platform Peripherals\n\n| On-Platform                           | Off-Platform                                        |\n|---------------------------------------|-----------------------------------------------------|\n| Enhanced Direct Memory Access (eDMA)  | Deserial Serial Peripheral Interface (DSPI)         |\n| PBridge A and B                       | Enhanced Queued Analog-to-Digital Converter (eQADC) |\n| Interrupt Controller (INTC)           | Enhanced Serial Communication Interface (eSCI)      |\n| Error Correction Status Module (ECSM) | FlexCAN Controller Area Network                     |\n| Fast Ethernet Controller (FEC)        | Boot Assist Module (BAM)                            |\n| System Bus Crossbar Switch (XBAR)     | System Integration Unit (SIU)                       |\n|                                       | Enhanced Modular Input/Output Subsystem (eMIOS)     |\n|                                       | Frequency Modulated Phase Locked Loop (FMPLL)       |\n|                                       | Enhanced Time Processing Unit (eTPU)                |\n\nTable 5-7. On-Platform and Off-Platform Peripherals  (continued)\n\n| On-Platform   | Off-Platform                    |\n|---------------|---------------------------------|\n|               | External Bus Interface (EBI)    |\n|               | Flash Bus Interface Unit (FBIU) |\n\nThe PBRIDGE occupies a 64 Mbyte portion of the address space. A 0.5 Mbyte portion of this space is allocated to on-platform peripherals. The remaining 63.5 Mbytes are available for off-platform devices. The register maps of the slave peripherals are located on 16-Kbyte boundaries. Each slave peripheral is allocated one 16-Kbyte block of the memory map, and is activated by one of the module enables from the PBRIDGE.  Up  to  thirty-two  16-Kbyte  external  slave  peripherals  may  be  implemented,  occupying contiguous blocks of 16 Kbytes. Two global external slave module enables are available for the remaining 63 Mbytes of address space to allow for customization and expansion of addressed peripheral devices. In addition, a single non-global module enable is also asserted whenever any of the 32 non-global module enables is asserted.\n\nThe PBRIDGE is responsible for indicating to slave peripherals if an access is in supervisor or user mode. The PBRIDGE may block user mode accesses to certain slave peripherals or it may allow the individual slave  peripherals  to  determine  if  user  mode  accesses  are  allowed.  In  addition,  peripherals  may  be designated as write-protected. The PBRIDGE supports the notion of trusted masters for security purposes. Masters may be individually designated as trusted for reads, trusted for writes, or trusted for both reads and writes, as well as being forced to look as though all accesses from a master are in user mode privilege level.\n\nThe PBRIDGE also supports buffered writes, allowing write accesses to be terminated on the system bus in  a  single  clock  cycle,  and  then  subsequently  performed  on  the  slave  interface.  Write  buffering  is controllable on a per-peripheral basis. The PBRIDGE implements a two-entry 32-bit write buffer."
  },
  {
    "chunk_id": "chatper-5-peripheral-bridge-pbridge-a-pbridge-b-5-5-revision-history",
    "source_file": "../docs/05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b.md",
    "chapter_title": "05-chatper-5-peripheral-bridge-pbridge_a-pbridge_b",
    "heading_hierarchy": [
      "Chatper 5 Peripheral Bridge (PBRIDGE\\_A, PBRIDGE\\_B)",
      "5.5 Revision History"
    ],
    "chunk_type": "table",
    "content": "| Substantive Changes since Rev 3.0                                                    |\n|--------------------------------------------------------------------------------------|\n| Fixed Figure 5-2. There were 4 MBW4s listed, now they are MBW4, MTR4, MTW4 and MPL4. |\n| Changed MPCR1 to MPCR in module memory map.                                          |\n| Added Note to Section 5.4.2, 'Peripheral Write Buffering.'                           |\n"
  }
]